{"ast":null,"code":"var _jsxFileName = \"/home/robbert/code/morse-code-masters/src/components/TranscriptToMorseCode/index.js\";\nimport React from \"react\";\nexport default function TranscriptToMorseCode(props) {\n  // morsecode\n  var code = {\n    a: \"._\",\n    b: \"_...\",\n    c: \"_._.\",\n    d: \"_..\",\n    e: \".\",\n    f: \".._.\",\n    g: \"__.\",\n    h: \"....\",\n    i: \"..\",\n    j: \".___\",\n    k: \"_._\",\n    l: \"._..\",\n    m: \"__\",\n    n: \"_.\",\n    o: \"___\",\n    p: \".__.\",\n    q: \"__._\",\n    r: \"._.\",\n    s: \"...\",\n    t: \"_\",\n    u: \".._\",\n    v: \"..._\",\n    w: \".__\",\n    x: \"_.._\",\n    y: \"_.__\",\n    z: \"__..\",\n    0: \"_____\",\n    1: \".____\",\n    2: \"..___\",\n    3: \"...__\",\n    4: \"...._\",\n    5: \".....\",\n    6: \"_....\",\n    7: \"__...\",\n    8: \"___..\",\n    9: \"____.\"\n  };\n  let MorseCodeToDisplay = []; // generate code for text\n\n  function makecode(data) {\n    for (var i = 0; i <= data.length; i++) {\n      var codedata = data.substr(i, 1).toLowerCase();\n      codedata = code[codedata];\n      MorseCodeToDisplay.push(codedata); // recognised character\n    }\n\n    console.log();\n    return MorseCodeToDisplay;\n  }\n\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, makecode(props.transcript));\n}","map":{"version":3,"sources":["/home/robbert/code/morse-code-masters/src/components/TranscriptToMorseCode/index.js"],"names":["React","TranscriptToMorseCode","props","code","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","MorseCodeToDisplay","makecode","data","length","codedata","substr","toLowerCase","push","console","log","transcript"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACnD;AACA,MAAIC,IAAI,GAAG;AACTC,IAAAA,CAAC,EAAE,IADM;AAETC,IAAAA,CAAC,EAAE,MAFM;AAGTC,IAAAA,CAAC,EAAE,MAHM;AAITC,IAAAA,CAAC,EAAE,KAJM;AAKTC,IAAAA,CAAC,EAAE,GALM;AAMTC,IAAAA,CAAC,EAAE,MANM;AAOTC,IAAAA,CAAC,EAAE,KAPM;AAQTC,IAAAA,CAAC,EAAE,MARM;AASTC,IAAAA,CAAC,EAAE,IATM;AAUTC,IAAAA,CAAC,EAAE,MAVM;AAWTC,IAAAA,CAAC,EAAE,KAXM;AAYTC,IAAAA,CAAC,EAAE,MAZM;AAaTC,IAAAA,CAAC,EAAE,IAbM;AAcTC,IAAAA,CAAC,EAAE,IAdM;AAeTC,IAAAA,CAAC,EAAE,KAfM;AAgBTC,IAAAA,CAAC,EAAE,MAhBM;AAiBTC,IAAAA,CAAC,EAAE,MAjBM;AAkBTC,IAAAA,CAAC,EAAE,KAlBM;AAmBTC,IAAAA,CAAC,EAAE,KAnBM;AAoBTC,IAAAA,CAAC,EAAE,GApBM;AAqBTC,IAAAA,CAAC,EAAE,KArBM;AAsBTC,IAAAA,CAAC,EAAE,MAtBM;AAuBTC,IAAAA,CAAC,EAAE,KAvBM;AAwBTC,IAAAA,CAAC,EAAE,MAxBM;AAyBTC,IAAAA,CAAC,EAAE,MAzBM;AA0BTC,IAAAA,CAAC,EAAE,MA1BM;AA2BT,OAAG,OA3BM;AA4BT,OAAG,OA5BM;AA6BT,OAAG,OA7BM;AA8BT,OAAG,OA9BM;AA+BT,OAAG,OA/BM;AAgCT,OAAG,OAhCM;AAiCT,OAAG,OAjCM;AAkCT,OAAG,OAlCM;AAmCT,OAAG,OAnCM;AAoCT,OAAG;AApCM,GAAX;AAsCA,MAAIC,kBAAkB,GAAG,EAAzB,CAxCmD,CAyCnD;;AACA,WAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIoB,IAAI,CAACC,MAA1B,EAAkCrB,CAAC,EAAnC,EAAuC;AACrC,UAAIsB,QAAQ,GAAGF,IAAI,CAACG,MAAL,CAAYvB,CAAZ,EAAe,CAAf,EAAkBwB,WAAlB,EAAf;AAEAF,MAAAA,QAAQ,GAAG/B,IAAI,CAAC+B,QAAD,CAAf;AACAJ,MAAAA,kBAAkB,CAACO,IAAnB,CAAwBH,QAAxB,EAJqC,CAKrC;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR;AACA,WAAOT,kBAAP;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,QAAQ,CAAC7B,KAAK,CAACsC,UAAP,CAAb,CAAP;AACD","sourcesContent":["import React from \"react\";\n\nexport default function TranscriptToMorseCode(props) {\n  // morsecode\n  var code = {\n    a: \"._\",\n    b: \"_...\",\n    c: \"_._.\",\n    d: \"_..\",\n    e: \".\",\n    f: \".._.\",\n    g: \"__.\",\n    h: \"....\",\n    i: \"..\",\n    j: \".___\",\n    k: \"_._\",\n    l: \"._..\",\n    m: \"__\",\n    n: \"_.\",\n    o: \"___\",\n    p: \".__.\",\n    q: \"__._\",\n    r: \"._.\",\n    s: \"...\",\n    t: \"_\",\n    u: \".._\",\n    v: \"..._\",\n    w: \".__\",\n    x: \"_.._\",\n    y: \"_.__\",\n    z: \"__..\",\n    0: \"_____\",\n    1: \".____\",\n    2: \"..___\",\n    3: \"...__\",\n    4: \"...._\",\n    5: \".....\",\n    6: \"_....\",\n    7: \"__...\",\n    8: \"___..\",\n    9: \"____.\",\n  };\n  let MorseCodeToDisplay = [];\n  // generate code for text\n  function makecode(data) {\n    for (var i = 0; i <= data.length; i++) {\n      var codedata = data.substr(i, 1).toLowerCase();\n\n      codedata = code[codedata];\n      MorseCodeToDisplay.push(codedata);\n      // recognised character\n    }\n    console.log()\n    return MorseCodeToDisplay;\n  }\n\n  return <h3>{makecode(props.transcript)}</h3>;\n}\n"]},"metadata":{},"sourceType":"module"}