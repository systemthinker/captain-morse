{"ast":null,"code":"var _jsxFileName = \"/home/robbert/code/morse-code-masters/src/components/SpeechRecognition/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpeechRecognition from \"react-speech-recognition\";\nimport MorseToSound from \"../MorseToSound\";\nimport TranscriptToMorseCharacters from \"../TranscriptToMorseCharacters\";\nconst options = {\n  autoStart: false\n};\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool,\n  abortListening: PropTypes.func,\n  startListening: PropTypes.func\n};\n\nconst Dictaphone = ({\n  transcript,\n  resetTranscript,\n  browserSupportsSpeechRecognition,\n  abortListening,\n  startListening\n}) => {\n  if (!browserSupportsSpeechRecognition) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTranscript,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(MorseToSound, {\n    transcript: transcript,\n    abortListen: abortListening,\n    startListen: startListening,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Transcript: \", transcript), /*#__PURE__*/React.createElement(TranscriptToMorseCharacters, {\n    transcript: transcript,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nDictaphone.propTypes = propTypes;\nexport default SpeechRecognition(options)(Dictaphone);","map":{"version":3,"sources":["/home/robbert/code/morse-code-masters/src/components/SpeechRecognition/index.js"],"names":["React","PropTypes","SpeechRecognition","MorseToSound","TranscriptToMorseCharacters","options","autoStart","propTypes","transcript","string","resetTranscript","func","browserSupportsSpeechRecognition","bool","abortListening","startListening","Dictaphone"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,2BAAP,MAAwC,gCAAxC;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE;AADG,CAAhB;AAIA,MAAMC,SAAS,GAAG;AAChB;AACAC,EAAAA,UAAU,EAAEP,SAAS,CAACQ,MAFN;AAGhBC,EAAAA,eAAe,EAAET,SAAS,CAACU,IAHX;AAIhBC,EAAAA,gCAAgC,EAAEX,SAAS,CAACY,IAJ5B;AAKhBC,EAAAA,cAAc,EAAEb,SAAS,CAACU,IALV;AAMhBI,EAAAA,cAAc,EAAEd,SAAS,CAACU;AANV,CAAlB;;AASA,MAAMK,UAAU,GAAG,CAAC;AAClBR,EAAAA,UADkB;AAElBE,EAAAA,eAFkB;AAGlBE,EAAAA,gCAHkB;AAIlBE,EAAAA,cAJkB;AAKlBC,EAAAA;AALkB,CAAD,KAMb;AACJ,MAAI,CAACH,gCAAL,EAAuC;AACrC,WAAO,IAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEF,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAEF,UADd;AAEE,IAAA,WAAW,EAAEM,cAFf;AAGE,IAAA,WAAW,EAAEC,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBP,UAAjB,CAPF,eAQE,oBAAC,2BAAD;AAA6B,IAAA,UAAU,EAAEA,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CAvBD;;AAyBAQ,UAAU,CAACT,SAAX,GAAuBA,SAAvB;AAEA,eAAeL,iBAAiB,CAACG,OAAD,CAAjB,CAA2BW,UAA3B,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpeechRecognition from \"react-speech-recognition\";\nimport MorseToSound from \"../MorseToSound\";\nimport TranscriptToMorseCharacters from \"../TranscriptToMorseCharacters\";\n\nconst options = {\n  autoStart: false,\n};\n\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool,\n  abortListening: PropTypes.func,\n  startListening: PropTypes.func,\n};\n\nconst Dictaphone = ({\n  transcript,\n  resetTranscript,\n  browserSupportsSpeechRecognition,\n  abortListening,\n  startListening,\n}) => {\n  if (!browserSupportsSpeechRecognition) {\n    return null;\n  }\n\n  return (\n    <div>\n      <button onClick={resetTranscript}>Reset</button>\n      <MorseToSound\n        transcript={transcript}\n        abortListen={abortListening}\n        startListen={startListening}\n      />\n      <h3>Transcript: {transcript}</h3>\n      <TranscriptToMorseCharacters transcript={transcript} />\n    </div>\n  );\n};\n\nDictaphone.propTypes = propTypes;\n\nexport default SpeechRecognition(options)(Dictaphone);\n"]},"metadata":{},"sourceType":"module"}