{"ast":null,"code":"var _jsxFileName = \"/home/robbert/code/morse-code-masters/src/components/LightHouse/index.js\";\nimport React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nexport default function LightHouse() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const props = useSpring({\n    opacity: isOpen ? 0 : 1\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => toggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"toggle\"), /*#__PURE__*/React.createElement(animated.div, {\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"i will fade\"));\n}","map":{"version":3,"sources":["/home/robbert/code/morse-code-masters/src/components/LightHouse/index.js"],"names":["React","useState","useSpring","animated","LightHouse","isOpen","setIsOpen","toggle","props","opacity","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAGA,eAAe,SAASC,UAAT,GAAsB;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMM,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AACA,QAAMG,KAAK,GAAGN,SAAS,CAAC;AAEpBO,IAAAA,OAAO,EAAEJ,MAAM,GAAE,CAAF,GAAK;AAFA,GAAD,CAAvB;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEK,CAAC,IAAEH,MAAM,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ;AAMH","sourcesContent":["import React, { useState } from 'react'\nimport { useSpring, animated } from 'react-spring'\n\n\nexport default function LightHouse() {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const props = useSpring({\n        \n        opacity: isOpen? 0: 1\n                             \n    \n    }) \n\n    return (\n        <div>\n            <button onClick={e=>toggle()}>toggle</button>\n            <animated.div style={props}>i will fade</animated.div> \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}