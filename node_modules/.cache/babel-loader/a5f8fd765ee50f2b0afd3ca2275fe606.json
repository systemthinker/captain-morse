{"ast":null,"code":"var _jsxFileName = \"/home/robbert/code/morse-code-masters/src/components/LightHouse/index.js\";\nimport React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nexport default function LightHouse({\n  bla,\n  morseChar\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const isShort = true;\n  const props = useSpring({\n    opacity: isOpen ? 0 : 1,\n    transitionDuration: isShort ? \"0.1s\" : \"3.0s\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => toggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"toggle\"), /*#__PURE__*/React.createElement(animated.div, {\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"i will fade\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, bla), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, morseChar.map(m => m)));\n}","map":{"version":3,"sources":["/home/robbert/code/morse-code-masters/src/components/LightHouse/index.js"],"names":["React","useState","useSpring","animated","LightHouse","bla","morseChar","isOpen","setIsOpen","toggle","isShort","props","opacity","transitionDuration","e","map","m"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAGA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA,GAAD;AAAKC,EAAAA;AAAL,CAApB,EAAqC;AAChD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMQ,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AAEA,QAAMG,OAAO,GAAG,IAAhB;AAGA,QAAMC,KAAK,GAAGT,SAAS,CAAC;AAEpBU,IAAAA,OAAO,EAAEL,MAAM,GAAG,CAAH,GAAM,CAFD;AAGpBM,IAAAA,kBAAkB,EAAEH,OAAO,GAAG,MAAH,GAAY;AAHnB,GAAD,CAAvB;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEI,CAAC,IAAEL,MAAM,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,GAAP,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAS,CAACS,GAAV,CAAcC,CAAC,IAAEA,CAAjB,CAAP,CAJJ,CADJ;AAQH","sourcesContent":["import React, { useState } from 'react'\nimport { useSpring, animated } from 'react-spring'\n\n\nexport default function LightHouse({bla,morseChar}) {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    const isShort = true;\n    \n\n    const props = useSpring({\n        \n        opacity: isOpen ? 0: 1,\n        transitionDuration: isShort ? \"0.1s\" : \"3.0s\",\n                             \n    \n    }) \n    \n    return (\n        <div>\n            <button onClick={e=>toggle()}>toggle</button>\n            <animated.div style={props}>i will fade</animated.div> \n            <span>{bla}</span>\n            <span>{morseChar.map(m=>m)}</span>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}