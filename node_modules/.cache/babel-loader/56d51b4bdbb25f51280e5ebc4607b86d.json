{"ast":null,"code":"var _jsxFileName = \"/home/robbert/code/morse-code-masters/src/components/MorseToAnimation/index.js\";\nimport React, { useState } from \"react\";\nimport { useSpring } from \"react-spring\";\nimport './index.css';\nexport default function MorseToAnimation({\n  morseString\n}) {\n  let myVar;\n  let time = 0;\n  const [color, setColor] = useState('red');\n\n  function setTheTimeOutGreen() {\n    time = time + 1000;\n    myVar = setTimeout(setGreen, time);\n  }\n\n  function setTheTimeOutPurple() {\n    myVar = setTimeout(setPurple, time);\n    time = time + 1000;\n  }\n\n  function setTheTimeOutRed() {\n    myVar = setTimeout(setRed, time);\n    time = time + 1000;\n  }\n\n  function setGreen() {\n    setColor('green');\n  }\n\n  function setPurple() {\n    setColor('purple');\n  }\n\n  function setRed() {\n    setColor('red');\n  }\n\n  let morseStringCharacters = [];\n  morseString.map(function (c) {\n    for (let i = 0; i < c.length; i++) {\n      console.log('char?', c[i]);\n      morseStringCharacters.push(c[i]);\n    }\n  });\n\n  function animationStart() {\n    morseStringCharacters.map(char => {\n      if (char === '.') {\n        setTheTimeOutGreen();\n      }\n\n      if (char === '_') {\n        setTheTimeOutPurple();\n      } else {\n        setTheTimeOutRed();\n      }\n    });\n  } // if(c === \".\") {setTimeout((color = \"green\"), 100)})\n  //   const animation = [\n  //     { name: \"short\", duration: 0.1, color: \"red\" },\n  //     { name: \"long\", duration: 0.3, color: \"green\" },\n  //   ];\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"hi from MorseToAnimation: \", morseString), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${color}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Flashy\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      animationStart();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"go wild\"));\n} //","map":{"version":3,"sources":["/home/robbert/code/morse-code-masters/src/components/MorseToAnimation/index.js"],"names":["React","useState","useSpring","MorseToAnimation","morseString","myVar","time","color","setColor","setTheTimeOutGreen","setTimeout","setGreen","setTheTimeOutPurple","setPurple","setTheTimeOutRed","setRed","morseStringCharacters","map","c","i","length","console","log","push","animationStart","char","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,aAAP;AAGA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAA2C;AAEvD,MAAIC,KAAJ;AACA,MAAIC,IAAI,GAAG,CAAX;AAEC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,KAAD,CAAjC;;AAGA,WAASQ,kBAAT,GAA6B;AACzBH,IAAAA,IAAI,GAAGA,IAAI,GAAG,IAAd;AACAD,IAAAA,KAAK,GAAGK,UAAU,CAAEC,QAAF,EAAYL,IAAZ,CAAlB;AAEH;;AAED,WAASM,mBAAT,GAA8B;AAC1BP,IAAAA,KAAK,GAAGK,UAAU,CAAEG,SAAF,EAAaP,IAAb,CAAlB;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAG,IAAd;AACH;;AAED,WAASQ,gBAAT,GAA2B;AACvBT,IAAAA,KAAK,GAAGK,UAAU,CAAEK,MAAF,EAAUT,IAAV,CAAlB;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAG,IAAd;AACH;;AAED,WAASK,QAAT,GAAmB;AACfH,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACH;;AAED,WAASK,SAAT,GAAoB;AAChBL,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;;AAED,WAASO,MAAT,GAAiB;AACbP,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AAIH,MAAIQ,qBAAqB,GAAG,EAA5B;AACEZ,EAAAA,WAAW,CAACa,GAAZ,CAAgB,UAAUC,CAAV,EAAa;AAE3B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAClCE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,CAAC,CAACC,CAAD,CAAtB;AACAH,MAAAA,qBAAqB,CAACO,IAAtB,CAA2BL,CAAC,CAACC,CAAD,CAA5B;AACA;AAEJ,GAPC;;AASF,WAASK,cAAT,GAAyB;AAC3BR,IAAAA,qBAAqB,CAACC,GAAtB,CAA2BQ,IAAD,IAAQ;AAE9B,UAAGA,IAAI,KAAK,GAAZ,EAAgB;AACZhB,QAAAA,kBAAkB;AAErB;;AAED,UAAGgB,IAAI,KAAK,GAAZ,EAAiB;AACbb,QAAAA,mBAAmB;AAEtB,OAHD,MAIM;AAEFE,QAAAA,gBAAgB;AAEnB;AAEJ,KAjBD;AAkBG,GAnEuD,CAqExD;AAEA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA8BV,WAA9B,CADF,eAEE;AAAK,IAAA,SAAS,EAAG,GAAEG,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,IAAA,OAAO,EAAEmB,CAAC,IAAE;AAACF,MAAAA,cAAc;AAAG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD,C,CAED","sourcesContent":["import React, { useState } from \"react\";\nimport { useSpring } from \"react-spring\";\nimport './index.css'\n\n\nexport default function MorseToAnimation({ morseString }) {\n\n   let myVar;\n   let time = 0;\n\n    const [color,setColor] = useState('red')\n    \n\n    function setTheTimeOutGreen(){\n        time = time + 1000;\n        myVar = setTimeout( setGreen, time)\n       \n    }\n\n    function setTheTimeOutPurple(){\n        myVar = setTimeout( setPurple, time)\n        time = time + 1000;\n    }\n\n    function setTheTimeOutRed(){\n        myVar = setTimeout( setRed, time)\n        time = time + 1000;\n    }\n\n    function setGreen(){\n        setColor('green')\n    }\n\n    function setPurple(){\n        setColor('purple')\n    }\n\n    function setRed(){\n        setColor('red')\n    }\n    \n    \n   \n  let morseStringCharacters = []\n    morseString.map(function (c) {\n \n      for (let i = 0; i < c.length; i++) {\n       console.log('char?', c[i])\n       morseStringCharacters.push(c[i])\n      }\n    \n  });\n\n  function animationStart(){\nmorseStringCharacters.map((char)=>{\n\n    if(char === '.'){\n        setTheTimeOutGreen();\n       \n    }\n\n    if(char === '_') {\n        setTheTimeOutPurple()\n       \n    }\n     else {\n     \n        setTheTimeOutRed()\n    \n    }\n\n})\n  }\n\n  // if(c === \".\") {setTimeout((color = \"green\"), 100)})\n\n  //   const animation = [\n  //     { name: \"short\", duration: 0.1, color: \"red\" },\n  //     { name: \"long\", duration: 0.3, color: \"green\" },\n  //   ];\n\n  return (\n    <div>\n      <p>hi from MorseToAnimation: {morseString}</p>\n      <div className={`${color}`}>Flashy</div>\n      <button onClick={e=>{animationStart()}}>go wild</button>\n    </div>\n  );\n}\n\n// \n"]},"metadata":{},"sourceType":"module"}