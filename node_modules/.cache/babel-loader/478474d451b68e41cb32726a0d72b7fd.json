{"ast":null,"code":"var _jsxFileName = \"/home/robbert/code/morse-code-masters/src/components/TextToMorse/index.js\";\nimport React, { useState } from \"react\";\nimport Output from \"../Output\";\nimport LightHouse from '../LightHouse';\nexport default function TextToMorse(props) {\n  var globalAudioContext = new window.AudioContext();\n  const result = morsecode(\"\");\n  const [morseChar, setMorseChar] = useState('');\n  console.log(\"props?\", props);\n  console.log(\"???\", props.abortListen);\n\n  function morsecode(text, unit, freq) {\n    \"use strict\"; // defaults\n\n    unit = unit ? unit : 0.10;\n    freq = freq ? freq : 50;\n    var cont = globalAudioContext;\n    var time = cont.currentTime; // morsecode\n\n    var code = {\n      a: \"._\",\n      b: \"_...\",\n      c: \"_._.\",\n      d: \"_..\",\n      e: \".\",\n      f: \".._.\",\n      g: \"__.\",\n      h: \"....\",\n      i: \"..\",\n      j: \".___\",\n      k: \"_._\",\n      l: \"._..\",\n      m: \"__\",\n      n: \"_.\",\n      o: \"___\",\n      p: \".__.\",\n      q: \"__._\",\n      r: \"._.\",\n      s: \"...\",\n      t: \"_\",\n      u: \".._\",\n      v: \"..._\",\n      w: \".__\",\n      x: \"_.._\",\n      y: \"_.__\",\n      z: \"__..\",\n      0: \"_____\",\n      1: \".____\",\n      2: \"..___\",\n      3: \"...__\",\n      4: \"...._\",\n      5: \".....\",\n      6: \"_....\",\n      7: \"__...\",\n      8: \"___..\",\n      9: \"____.\"\n    };\n    let MorseCodeToDisplay = []; // generate code for text\n\n    function makecode(data) {\n      for (var i = 0; i <= data.length; i++) {\n        var codedata = data.substr(i, 1).toLowerCase();\n        codedata = code[codedata];\n        MorseCodeToDisplay.push(codedata); // recognised character\n\n        if (codedata !== undefined) {\n          maketime(codedata);\n        } // unrecognised character\n        else {\n            time += unit * 7;\n          }\n      }\n    } // generate time for code\n\n\n    function maketime(data) {\n      for (var i = 0; i <= data.length; i++) {\n        var timedata = data.substr(i, 1);\n        timedata = timedata === \".\" ? 1 : timedata === \"_\" ? 3 : 0;\n        timedata === 1 ? setMorseChar('short') : timedata === 3 ? setMorseChar('long') : setMorseChar('niks');\n        const bla = \"bla\";\n        timedata *= unit;\n\n        if (timedata > 0) {\n          maketone(timedata);\n          time += timedata; // tone gap\n\n          time += unit * 1;\n        }\n      } // char gap\n\n\n      time += unit * 2;\n    } // generate tone for time\n\n\n    function maketone(data) {\n      var start = time;\n      var stop = time + data;\n      console.log('start is', start);\n      console.log('stop is', stop); // filter: envelope the tone slightly\n\n      gain.gain.linearRampToValueAtTime(0, start);\n      gain.gain.linearRampToValueAtTime(1, start + unit / 8);\n      gain.gain.linearRampToValueAtTime(1, stop - unit / 16);\n      gain.gain.linearRampToValueAtTime(0, stop);\n    } // create: oscillator, gain, destination\n\n\n    var osci = cont.createOscillator();\n    osci.frequency.value = freq;\n    var gain = cont.createGain();\n    gain.gain.value = 0;\n    var dest = cont.destination; // connect: oscillator -> gain -> destination\n\n    osci.connect(gain);\n    gain.connect(dest); // start oscillator\n\n    osci.start(time); // begin encoding: text -> code -> time -> tone\n\n    makecode(text);\n    console.log('time is ', time); // return web audio context for reuse / control\n\n    return cont;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \"Hello from Morse\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      morsecode(\"sos\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"SOS Test\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      props.startListen();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"Record\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      props.abortListen();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Stop Record\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      morsecode(props.transcript);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, \"Play Morse Code Sound\"), /*#__PURE__*/React.createElement(LightHouse, {\n    morseChar: ditIsRaar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/robbert/code/morse-code-masters/src/components/TextToMorse/index.js"],"names":["React","useState","Output","LightHouse","TextToMorse","props","globalAudioContext","window","AudioContext","result","morsecode","morseChar","setMorseChar","console","log","abortListen","text","unit","freq","cont","time","currentTime","code","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","MorseCodeToDisplay","makecode","data","length","codedata","substr","toLowerCase","push","undefined","maketime","timedata","bla","maketone","start","stop","gain","linearRampToValueAtTime","osci","createOscillator","frequency","value","createGain","dest","destination","connect","startListen","transcript","ditIsRaar"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Output from \"../Output\";\nimport LightHouse from '../LightHouse'\n\nexport default function TextToMorse(props) {\n  var globalAudioContext = new window.AudioContext();\n  const result = morsecode(\"\");\n  const [morseChar, setMorseChar] = useState('')\n  console.log(\"props?\", props);\n  console.log(\"???\", props.abortListen);\n\n  function morsecode(text, unit, freq) {\n    \"use strict\";\n\n    // defaults\n    unit = unit ? unit : 0.10;\n    freq = freq ? freq : 50;\n    var cont = globalAudioContext;\n    var time = cont.currentTime;\n\n    // morsecode\n    var code = {\n      a: \"._\",\n      b: \"_...\",\n      c: \"_._.\",\n      d: \"_..\",\n      e: \".\",\n      f: \".._.\",\n      g: \"__.\",\n      h: \"....\",\n      i: \"..\",\n      j: \".___\",\n      k: \"_._\",\n      l: \"._..\",\n      m: \"__\",\n      n: \"_.\",\n      o: \"___\",\n      p: \".__.\",\n      q: \"__._\",\n      r: \"._.\",\n      s: \"...\",\n      t: \"_\",\n      u: \".._\",\n      v: \"..._\",\n      w: \".__\",\n      x: \"_.._\",\n      y: \"_.__\",\n      z: \"__..\",\n      0: \"_____\",\n      1: \".____\",\n      2: \"..___\",\n      3: \"...__\",\n      4: \"...._\",\n      5: \".....\",\n      6: \"_....\",\n      7: \"__...\",\n      8: \"___..\",\n      9: \"____.\",\n    };\n    let MorseCodeToDisplay = [];\n    // generate code for text\n    function makecode(data) {\n      for (var i = 0; i <= data.length; i++) {\n        var codedata = data.substr(i, 1).toLowerCase();\n\n        codedata = code[codedata];\n        MorseCodeToDisplay.push(codedata);\n        // recognised character\n        if (codedata !== undefined) {\n          maketime(codedata);\n        }\n        // unrecognised character\n        else {\n          time += unit * 7;\n        }\n      }\n    }\n\n    // generate time for code\n    function maketime(data) {\n      for (var i = 0; i <= data.length; i++) {\n        var timedata = data.substr(i, 1);\n        timedata = timedata === \".\" ? 1 : timedata === \"_\" ? 3 : 0;\n        timedata === 1 ? setMorseChar('short') : timedata === 3 ? setMorseChar('long') : setMorseChar('niks');\n        const bla = \"bla\";\n\n        \n\n\n        timedata *= unit;\n        if (timedata > 0) {\n          maketone(timedata);\n          time += timedata;\n          // tone gap\n          time += unit * 1;\n        }\n      }\n      // char gap\n      time += unit * 2;\n    }\n    \n    // generate tone for time\n    function maketone(data) {\n      var start = time;\n      var stop = time + data;\n      console.log('start is', start)\n      console.log('stop is', stop)\n    \n      // filter: envelope the tone slightly\n      gain.gain.linearRampToValueAtTime(0, start);\n      gain.gain.linearRampToValueAtTime(1, start + unit / 8);\n      gain.gain.linearRampToValueAtTime(1, stop - unit / 16);\n      gain.gain.linearRampToValueAtTime(0, stop);\n    }\n\n    // create: oscillator, gain, destination\n    var osci = cont.createOscillator();\n    osci.frequency.value = freq;\n    var gain = cont.createGain();\n    gain.gain.value = 0;\n    var dest = cont.destination;\n    // connect: oscillator -> gain -> destination\n    osci.connect(gain);\n    gain.connect(dest);\n    // start oscillator\n    osci.start(time);\n\n    // begin encoding: text -> code -> time -> tone\n    makecode(text);\n    console.log('time is ', time);\n    // return web audio context for reuse / control\n    return cont;\n  }\n\n  \n  return (\n    <>\n      <div>Hello from Morse</div>\n      <button\n        onClick={(e) => {\n          morsecode(\"sos\");\n        }}\n      >\n        SOS Test\n      </button>\n      <button\n        onClick={(e) => {\n          props.startListen();\n        }}\n      >\n        Record\n      </button>\n      <button\n        onClick={(e) => {\n          props.abortListen();\n        }}\n      >\n        Stop Record\n      </button>\n      <button\n        onClick={(e) => {\n          morsecode(props.transcript);\n        }}\n      >\n        Play Morse Code Sound\n      </button>\n      <LightHouse morseChar={ditIsRaar} />\n    </>\n\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}