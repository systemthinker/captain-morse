{"ast":null,"code":"var _jsxFileName = \"/home/robbert/code/morse-code-masters/src/components/TextToMorse/index.js\";\nimport React from \"react\";\nexport default function TextToMorse() {\n  var globalAudioContext = new window.AudioContext();\n  const result = morsecode(\"Robbert en Thomas\");\n\n  function morsecode(text, unit, freq) {\n    \"use strict\"; // defaults\n\n    unit = unit ? unit : 0.05;\n    freq = freq ? freq : 700;\n    var cont = globalAudioContext;\n    var time = cont.currentTime; // morsecode\n\n    var code = {\n      a: \"._\",\n      b: \"_...\",\n      c: \"_._.\",\n      d: \"_..\",\n      e: \".\",\n      f: \".._.\",\n      g: \"__.\",\n      h: \"....\",\n      i: \"..\",\n      j: \".___\",\n      k: \"_._\",\n      l: \"._..\",\n      m: \"__\",\n      n: \"_.\",\n      o: \"___\",\n      p: \".__.\",\n      q: \"__._\",\n      r: \"._.\",\n      s: \"...\",\n      t: \"_\",\n      u: \".._\",\n      v: \"..._\",\n      w: \".__\",\n      x: \"_.._\",\n      y: \"_.__\",\n      z: \"__..\",\n      0: \"_____\",\n      1: \".____\",\n      2: \"..___\",\n      3: \"...__\",\n      4: \"...._\",\n      5: \".....\",\n      6: \"_....\",\n      7: \"__...\",\n      8: \"___..\",\n      9: \"____.\"\n    }; // generate code for text\n\n    function makecode(data) {\n      for (var i = 0; i <= data.length; i++) {\n        var codedata = data.substr(i, 1).toLowerCase();\n        codedata = code[codedata]; // recognised character\n\n        if (codedata !== undefined) {\n          maketime(codedata);\n        } // unrecognised character\n        else {\n            time += unit * 7;\n          }\n      }\n    } // generate time for code\n\n\n    function maketime(data) {\n      for (var i = 0; i <= data.length; i++) {\n        var timedata = data.substr(i, 1);\n        timedata = timedata === \".\" ? 1 : timedata === \"_\" ? 3 : 0;\n        timedata *= unit;\n\n        if (timedata > 0) {\n          maketone(timedata);\n          time += timedata; // tone gap\n\n          time += unit * 1;\n        }\n      } // char gap\n\n\n      time += unit * 2;\n    } // generate tone for time\n\n\n    function maketone(data) {\n      var start = time;\n      var stop = time + data; // filter: envelope the tone slightly\n\n      gain.gain.linearRampToValueAtTime(0, start);\n      gain.gain.linearRampToValueAtTime(1, start + unit / 8);\n      gain.gain.linearRampToValueAtTime(1, stop - unit / 16);\n      gain.gain.linearRampToValueAtTime(0, stop);\n    } // create: oscillator, gain, destination\n\n\n    var osci = cont.createOscillator();\n    osci.frequency.value = freq;\n    var gain = cont.createGain();\n    gain.gain.value = 0;\n    var dest = cont.destination; // connect: oscillator -> gain -> destination\n\n    osci.connect(gain);\n    gain.connect(dest); // start oscillator\n\n    osci.start(time); // begin encoding: text -> code -> time -> tone\n\n    makecode(text); // return web audio context for reuse / control\n\n    return cont;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Hello from TextToMorse\"));\n}","map":{"version":3,"sources":["/home/robbert/code/morse-code-masters/src/components/TextToMorse/index.js"],"names":["React","TextToMorse","globalAudioContext","window","AudioContext","result","morsecode","text","unit","freq","cont","time","currentTime","code","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","makecode","data","length","codedata","substr","toLowerCase","undefined","maketime","timedata","maketone","start","stop","gain","linearRampToValueAtTime","osci","createOscillator","frequency","value","createGain","dest","destination","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,MAAIC,kBAAkB,GAAG,IAAIC,MAAM,CAACC,YAAX,EAAzB;AACA,QAAMC,MAAM,GAAGC,SAAS,CAAC,mBAAD,CAAxB;;AAEA,WAASA,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AACnC,iBADmC,CAGnC;;AACAD,IAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAH,GAAU,IAArB;AACAC,IAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAH,GAAU,GAArB;AACA,QAAIC,IAAI,GAAGR,kBAAX;AACA,QAAIS,IAAI,GAAGD,IAAI,CAACE,WAAhB,CAPmC,CASnC;;AACA,QAAIC,IAAI,GAAG;AACTC,MAAAA,CAAC,EAAE,IADM;AAETC,MAAAA,CAAC,EAAE,MAFM;AAGTC,MAAAA,CAAC,EAAE,MAHM;AAITC,MAAAA,CAAC,EAAE,KAJM;AAKTC,MAAAA,CAAC,EAAE,GALM;AAMTC,MAAAA,CAAC,EAAE,MANM;AAOTC,MAAAA,CAAC,EAAE,KAPM;AAQTC,MAAAA,CAAC,EAAE,MARM;AASTC,MAAAA,CAAC,EAAE,IATM;AAUTC,MAAAA,CAAC,EAAE,MAVM;AAWTC,MAAAA,CAAC,EAAE,KAXM;AAYTC,MAAAA,CAAC,EAAE,MAZM;AAaTC,MAAAA,CAAC,EAAE,IAbM;AAcTC,MAAAA,CAAC,EAAE,IAdM;AAeTC,MAAAA,CAAC,EAAE,KAfM;AAgBTC,MAAAA,CAAC,EAAE,MAhBM;AAiBTC,MAAAA,CAAC,EAAE,MAjBM;AAkBTC,MAAAA,CAAC,EAAE,KAlBM;AAmBTC,MAAAA,CAAC,EAAE,KAnBM;AAoBTC,MAAAA,CAAC,EAAE,GApBM;AAqBTC,MAAAA,CAAC,EAAE,KArBM;AAsBTC,MAAAA,CAAC,EAAE,MAtBM;AAuBTC,MAAAA,CAAC,EAAE,KAvBM;AAwBTC,MAAAA,CAAC,EAAE,MAxBM;AAyBTC,MAAAA,CAAC,EAAE,MAzBM;AA0BTC,MAAAA,CAAC,EAAE,MA1BM;AA2BT,SAAG,OA3BM;AA4BT,SAAG,OA5BM;AA6BT,SAAG,OA7BM;AA8BT,SAAG,OA9BM;AA+BT,SAAG,OA/BM;AAgCT,SAAG,OAhCM;AAiCT,SAAG,OAjCM;AAkCT,SAAG,OAlCM;AAmCT,SAAG,OAnCM;AAoCT,SAAG;AApCM,KAAX,CAVmC,CAiDnC;;AACA,aAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,WAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAImB,IAAI,CAACC,MAA1B,EAAkCpB,CAAC,EAAnC,EAAuC;AACrC,YAAIqB,QAAQ,GAAGF,IAAI,CAACG,MAAL,CAAYtB,CAAZ,EAAe,CAAf,EAAkBuB,WAAlB,EAAf;AACAF,QAAAA,QAAQ,GAAG9B,IAAI,CAAC8B,QAAD,CAAf,CAFqC,CAGrC;;AACA,YAAIA,QAAQ,KAAKG,SAAjB,EAA4B;AAC1BC,UAAAA,QAAQ,CAACJ,QAAD,CAAR;AACD,SAFD,CAGA;AAHA,aAIK;AACHhC,YAAAA,IAAI,IAAIH,IAAI,GAAG,CAAf;AACD;AACF;AACF,KA/DkC,CAiEnC;;;AACA,aAASuC,QAAT,CAAkBN,IAAlB,EAAwB;AACtB,WAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAImB,IAAI,CAACC,MAA1B,EAAkCpB,CAAC,EAAnC,EAAuC;AACrC,YAAI0B,QAAQ,GAAGP,IAAI,CAACG,MAAL,CAAYtB,CAAZ,EAAe,CAAf,CAAf;AACA0B,QAAAA,QAAQ,GAAGA,QAAQ,KAAK,GAAb,GAAmB,CAAnB,GAAuBA,QAAQ,KAAK,GAAb,GAAmB,CAAnB,GAAuB,CAAzD;AACAA,QAAAA,QAAQ,IAAIxC,IAAZ;;AACA,YAAIwC,QAAQ,GAAG,CAAf,EAAkB;AAChBC,UAAAA,QAAQ,CAACD,QAAD,CAAR;AACArC,UAAAA,IAAI,IAAIqC,QAAR,CAFgB,CAGhB;;AACArC,UAAAA,IAAI,IAAIH,IAAI,GAAG,CAAf;AACD;AACF,OAXqB,CAYtB;;;AACAG,MAAAA,IAAI,IAAIH,IAAI,GAAG,CAAf;AACD,KAhFkC,CAkFnC;;;AACA,aAASyC,QAAT,CAAkBR,IAAlB,EAAwB;AACtB,UAAIS,KAAK,GAAGvC,IAAZ;AACA,UAAIwC,IAAI,GAAGxC,IAAI,GAAG8B,IAAlB,CAFsB,CAGtB;;AACAW,MAAAA,IAAI,CAACA,IAAL,CAAUC,uBAAV,CAAkC,CAAlC,EAAqCH,KAArC;AACAE,MAAAA,IAAI,CAACA,IAAL,CAAUC,uBAAV,CAAkC,CAAlC,EAAqCH,KAAK,GAAG1C,IAAI,GAAG,CAApD;AACA4C,MAAAA,IAAI,CAACA,IAAL,CAAUC,uBAAV,CAAkC,CAAlC,EAAqCF,IAAI,GAAG3C,IAAI,GAAG,EAAnD;AACA4C,MAAAA,IAAI,CAACA,IAAL,CAAUC,uBAAV,CAAkC,CAAlC,EAAqCF,IAArC;AACD,KA3FkC,CA6FnC;;;AACA,QAAIG,IAAI,GAAG5C,IAAI,CAAC6C,gBAAL,EAAX;AACAD,IAAAA,IAAI,CAACE,SAAL,CAAeC,KAAf,GAAuBhD,IAAvB;AACA,QAAI2C,IAAI,GAAG1C,IAAI,CAACgD,UAAL,EAAX;AACAN,IAAAA,IAAI,CAACA,IAAL,CAAUK,KAAV,GAAkB,CAAlB;AACA,QAAIE,IAAI,GAAGjD,IAAI,CAACkD,WAAhB,CAlGmC,CAmGnC;;AACAN,IAAAA,IAAI,CAACO,OAAL,CAAaT,IAAb;AACAA,IAAAA,IAAI,CAACS,OAAL,CAAaF,IAAb,EArGmC,CAsGnC;;AACAL,IAAAA,IAAI,CAACJ,KAAL,CAAWvC,IAAX,EAvGmC,CAyGnC;;AACA6B,IAAAA,QAAQ,CAACjC,IAAD,CAAR,CA1GmC,CA4GnC;;AACA,WAAOG,IAAP;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF;AAKD","sourcesContent":["import React from \"react\";\n\nexport default function TextToMorse() {\n  var globalAudioContext = new window.AudioContext();\n  const result = morsecode(\"Robbert en Thomas\");\n\n  function morsecode(text, unit, freq) {\n    \"use strict\";\n\n    // defaults\n    unit = unit ? unit : 0.05;\n    freq = freq ? freq : 700;\n    var cont = globalAudioContext;\n    var time = cont.currentTime;\n\n    // morsecode\n    var code = {\n      a: \"._\",\n      b: \"_...\",\n      c: \"_._.\",\n      d: \"_..\",\n      e: \".\",\n      f: \".._.\",\n      g: \"__.\",\n      h: \"....\",\n      i: \"..\",\n      j: \".___\",\n      k: \"_._\",\n      l: \"._..\",\n      m: \"__\",\n      n: \"_.\",\n      o: \"___\",\n      p: \".__.\",\n      q: \"__._\",\n      r: \"._.\",\n      s: \"...\",\n      t: \"_\",\n      u: \".._\",\n      v: \"..._\",\n      w: \".__\",\n      x: \"_.._\",\n      y: \"_.__\",\n      z: \"__..\",\n      0: \"_____\",\n      1: \".____\",\n      2: \"..___\",\n      3: \"...__\",\n      4: \"...._\",\n      5: \".....\",\n      6: \"_....\",\n      7: \"__...\",\n      8: \"___..\",\n      9: \"____.\",\n    };\n\n    // generate code for text\n    function makecode(data) {\n      for (var i = 0; i <= data.length; i++) {\n        var codedata = data.substr(i, 1).toLowerCase();\n        codedata = code[codedata];\n        // recognised character\n        if (codedata !== undefined) {\n          maketime(codedata);\n        }\n        // unrecognised character\n        else {\n          time += unit * 7;\n        }\n      }\n    }\n\n    // generate time for code\n    function maketime(data) {\n      for (var i = 0; i <= data.length; i++) {\n        var timedata = data.substr(i, 1);\n        timedata = timedata === \".\" ? 1 : timedata === \"_\" ? 3 : 0;\n        timedata *= unit;\n        if (timedata > 0) {\n          maketone(timedata);\n          time += timedata;\n          // tone gap\n          time += unit * 1;\n        }\n      }\n      // char gap\n      time += unit * 2;\n    }\n\n    // generate tone for time\n    function maketone(data) {\n      var start = time;\n      var stop = time + data;\n      // filter: envelope the tone slightly\n      gain.gain.linearRampToValueAtTime(0, start);\n      gain.gain.linearRampToValueAtTime(1, start + unit / 8);\n      gain.gain.linearRampToValueAtTime(1, stop - unit / 16);\n      gain.gain.linearRampToValueAtTime(0, stop);\n    }\n\n    // create: oscillator, gain, destination\n    var osci = cont.createOscillator();\n    osci.frequency.value = freq;\n    var gain = cont.createGain();\n    gain.gain.value = 0;\n    var dest = cont.destination;\n    // connect: oscillator -> gain -> destination\n    osci.connect(gain);\n    gain.connect(dest);\n    // start oscillator\n    osci.start(time);\n\n    // begin encoding: text -> code -> time -> tone\n    makecode(text);\n\n    // return web audio context for reuse / control\n    return cont;\n  }\n\n  return (\n    <>\n      <div>Hello from TextToMorse</div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}